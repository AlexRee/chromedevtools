#summary upcoming release 0.3.0 notes

=Google Chrome Developer Tools for Java. Upcoming Release 0.3.0.=

This release succeeds the [Release_0_2_2 release 0.2.2].

==Overview==
This release main themes are support of emerging [WIP WebKit Remote Debugging Protocol] in Chrome and simplified 'auto-detect' source look-up implementation. SDK interfaces have been changed moderately but incompatibly, so the minor version number was bumped up. On update site a new feature called "!ChromeDevTools SDK WIP Backends" is added and is recommended for install.

==Debugger==
===Auto-Detect Source Look-Up Mode===
Several releases ago Debugger began to support source look-up -- using user source files from workspace rather than temporary auto-created files under a VirtualProject. However set-up procedure was pretty much involved. It was a price for the accurateness of 2-way source matching.

This release introduces a new, much more user-friendly look-up mode called 'Auto-detect' (the old one is now called 'Exact match'). It employes more fuzzy algorithms and deals only with short file names.
You can enable it from the Debug Configurations dialog.

1. In 'Remote' tab choose 'Auto-detect' mode.

https://chromedevtools.googlecode.com/svn/wiki/rel030-debug-configurations-remote.png

2. In Source tab add one or more folders that holds your working files.

If all of your files in the project are called 'foo.js', this probably won't work correctly. However for the most of projects there shouldn't be any problems.

Anyway, should you occasionally have 2 files with the same name in the different directories, there is a fall-back: you can configure Debugger to take a directory name into consideration for this particular file.

1. Open file properties (Alt+Enter).

https://chromedevtools.googlecode.com/svn/wiki/rel030-script-properties.png

2. Use 'Less' and 'More' buttons to add or remove remove file path components. By default only the file name is used, but you may add its parent directory or more long path. All selected file path components will be used for matching this file. 

===Experimental !WebKit Remote Debugging Protocol (WIP)=== 
This release adds an [WIP experimental support] for a new debug protocol used in Google Chrome/Chromium. This protocol should eventually supersede currently used [ChromeDevToolsProtocol 'DevTools' protocol]. The subproject got a local codename [WIP].

From the user point of view switching to the new protocol should be virtually transparent. The most obvious change is ref-id's in Variables/Expressions views: now they have a different format and are completely random, so that the same object may appear with the different ids in the same view. 

To try the new protocol you should make sure that you installed feature "!ChromeDevTools SDK WIP Backends". This reveals how WIP implementation is currently deployed. There are several (incompatible) versions of protocol that we currently support and you can choose between them: the older protocol version corresponds to the current stable release of Chrome (13), but it misses some features; the newer protocol version comes with all features, but browser is in yet-not-stable development state. There is a separate feature "!ChromeDevTools SDK WIP Backends" that installs the current collection of backends;  updating this feature should install newer WIP backends in the future as the protocol evolves.

As of 0.3.0 you need to choose the correct backend manually. See the [#WIP_Backends table] below.

  # Create a debug configuration of "!WebKit Protocol" type.
  # In 'Remote' tab select the proper backend version in the drop-down list.

===Exceptions===
Debugger started to better support exceptions. If you stopped on exception (see {{{Break on JavaScript Exceptions}}} in LaunchElement) or got an exception as a result of expression evaluate, now you have the access to the exception value: you can expand its properties or pin-point an object or do whatever is available from Variables view.

===Object From 'with' Statement===
Similarly to exceptions if you paused inside {{{with}}} statement, you can see its argument in Variables view and get a full access to it. Note that if your {{{with}}}-argument is a primitive value, !JavaScript VM may be not fully accurate and return a wrapper-object instead of original value.

===Separate Folders For Unnamed Scripts===
All scripts that are currently loaded in VM are shown under a VirtualProject. To keep things more clear, scripts without a name (e.g. eval'd) are put in a separate folder.

===JSDT Integration Feature Notes===
"Chromium !JavaScript Debugger Bridge to JSDT" feature became less important. It used to bind Debugger with JSDT native breakpoints. However Eclipse allows to create ChromeDevTools breakpoints right in JSDT editor (in any editor in fact); see {{{Run | Breakpoint Types}}}. Therefore this binding code was dropped. However the feature is still useful if you want to use JSDT formatter in {{{V8 Debugging | Temporarily Format Source}}} action.

==SDK==
The main change in SDK is the support of !WebKit Remote Debugging Protocol that is locally called [WIP].

See also a new SdkTutorial and generated [http://chromedevtools.googlecode.com/svn/trunk/plugins/org.chromium.sdk/javadocs/index.html javadocs].

Other changes are moderate interfaces redesign, support for clearing internal property caches (see [http://code.google.com/p/chromedevtools/issues/detail?id=44 issue#44]) and a faster JSON parser that is implemented without Java reflection.

This SDK version does not support any new feature that [WIP WebKit Remote Debugging Protocol] offers. However this is planned for the next releases. 

==WIP Backends==

The list of available WIP backend versions. They get installed within a feature "!ChromeDevTools SDK WIP Backends".
|| id || Chrome version || Debugger limitations || SDK limitations ||
|| WK@87771 || 13.0.782.112 (stable) || Auto-detect mode is missing,<br>live edit preview is missing. || '!RegExp' breakpoint targets unsupported,<br>live edit preview is missing. ||
|| WK@91698 || 14.0.835.`*` (beta) || || ||
|| WK@93101 || 15.0.855.`*`<br>dev build#97053 || || ||

==System Requirements==
|| *Eclipse configuration:*  ||Eclipse Platform or any richer configuration (e.g. Eclipse Java IDE). ||
|| *Eclipse version:* ||  Eclipse 3.5 minimum, Eclipse 3.6 is also tested. ||
|| *Java:* || J2SE-1.6 or newer. ||

Optional:
|| *JSDT version:*<br>(feature _!JavaScript Development Tools_) || 1.2.0 or newer<br>(corresponds to Eclipse 3.6).||