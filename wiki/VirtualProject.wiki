#summary Virtual Projects.

== What is it? ==

A "virtual project" is an Eclipse project created by the [EclipseDebugger Debugger] for every debug session (called _"a launch"_ in Eclipse) and deleted once the debug session is over. Virtual projects can be found among other regular projects. Since [Release_0_2_0 release 0.2.0], the virtual project icon is decorated by a small [http://www.chromium.org Chromium] logo. A virtual project serves as a container for !JavaScript scripts downloaded from a remote VM. Those scripts are never saved on disk and get deleted together with the virtual project.

== Why do we need it? ==

For languages like C++ or Java, all source files reside in a developer's working directory. The !JavaScript case is quite different: all source scripts reside inside a running !JavaScript virtual machine (VM), including those generated on the fly. That's why a !JavaScript debugger has to download the scripts from a VM into Eclipse first. A virtual project is the way the Debugger stores them.

== Virtual project vs. Workspace local files ==

A virtual project is useful because it contains all up-to-date sources, so you don't have to care about checking them out elsewhere. It also contains sources that are generated on the fly, and is irreplaceable in this aspect.

Unfortunately, a virtual project is not very useful for a !JavaScript developer who may want to _edit_ files, not only debug them. (Actually, scripts from virtual projects _are_ editable, which is used for the _live editing_ feature, but all changes are lost once the VM stops). In a more common setting, a developer will link a debug session to the workspace source files -- a feature first introduced and described in [Release_0_1_6 release 0.1.6].

Once again, remember that a virtual project exists for every debug session, regardless of whether the workspace source files are configured for the respective debug session or not.